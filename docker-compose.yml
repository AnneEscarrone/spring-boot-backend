services:
  backend:
    build:
      context: ./spring-boot-backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "5005:5005"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/db_demo
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: runna
      SPRING_PROFILES_ACTIVE: prod
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: yourpassword
    depends_on:
      - db
      - redis
      - rabbitmq
    command: ["java", "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005", "-jar", "/app/app.jar"]

  frontend:
    build:
      context: ./react-frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"  
    volumes:
      - ./react-frontend:/app  
    command: ["npm", "start"]  

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: runna
      POSTGRES_DB: db_demo
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis-server
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=runna
    volumes:
      - redis_data:/data
    command: ["redis-server", "--requirepass", "runna"]
    
  rabbitmq:
    image: "rabbitmq:3.9-management"
    container_name: rabbitmq
    ports:
      - "5672:5672"  
      - "15672:15672" 
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password

volumes:
  postgres_data:
  redis_data:

